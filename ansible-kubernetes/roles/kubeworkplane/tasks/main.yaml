- name: Install OS dependencies
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ os_depend }}"
  become: yes

- name: Downloads the Kubernetes Worker Binaries
  get_url:
    url: "{{ item.url }}"
    dest: /home/vagrant
  with_items: "{{ url_worker_bin }}"

- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
  with_items: "{{ instal_dir }}"
  become: yes

- name: Install the worker binaries
  shell: |
    tar -xvf crictl-v1.18.0-linux-amd64.tar.gz
    sudo chown vagrant:vagrant containerd
    tar -xvf containerd-1.3.6-linux-amd64.tar.gz -C containerd
    sudo tar -xvf cni-plugins-linux-amd64-v0.8.6.tgz -C /opt/cni/bin/
    sudo mv runc.amd64 runc
    chmod +x crictl kubectl kube-proxy kubelet runc
    sudo mv crictl kubectl kube-proxy kubelet runc /usr/local/bin/
    sudo mv containerd/bin/* /bin/
  args:
    chdir: /home/vagrant

- name: Configure bridge network config file
  template:
    src: 10-bridge.conf.j2
    dest: /etc/cni/net.d/10-bridge.conf
  become: yes

- name: Generatetion kubeconfig
  template:
    src: kubelet-config.yaml.j2
    dest: /var/lib/kubelet/kubelet-config.yaml
  become: yes

- name: Move key files
  shell: |
    mv {{ inventory_hostname }}-key.pem {{ inventory_hostname }}.pem /var/lib/kubelet/
    mv {{ inventory_hostname }}.kubeconfig /var/lib/kubelet/kubeconfig
    mv ca.pem /var/lib/kubernetes/
  args:
    chdir: /home/vagrant
  become: yes

- name: Create config files
  copy:
    src: "{{ item.name }}"
    dest: "{{ item.path }}"
  with_items: "{{ copy_files }}"
  become: yes

- name: Configure kube-proxy
  shell: sudo mv kube-proxy.kubeconfig /var/lib/kube-proxy/kubeconfig

- name: Enable Worker Services
  systemd:
    state: started
    enabled: yes
    name: "{{ item }}"
    daemon_reload: yes
  with_items:
    - containerd
    - kubelet
    - kube-proxy
  become: yes

